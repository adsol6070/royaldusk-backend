# Main configuration for NGINX
events {
    # Event module configuration (can be left default)
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types; # Include MIME types
    default_type application/octet-stream;

    # Define server blocks here
    server {
        listen 80;
        server_name localhost;

        # Route to user-service
        location /user-service/ {
            proxy_pass http://user-service:5001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to blog-service
        location /blog-service/ {
            proxy_pass http://blog-service:5002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to tour-service
        location /tour-service/ {
            proxy_pass http://tour-service:5007/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to email-service
        location /email-service/ {
            proxy_pass http://email-service:5003/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to package-service
        location /package-service/ {
            proxy_pass http://package-service:5004/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to booking-service
        location /booking-service/ {
            proxy_pass http://booking-service:5005/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to payment-service
        location /payment-service/ {
            proxy_pass http://payment-service:5006/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Dummy route for testing
        location /dummy-route {
            return 200 'Dummy route is working!';
            add_header Content-Type text/plain;
        }

        # Default handler for non-existing routes
        location / {
            return 404;
        }
    }
}
